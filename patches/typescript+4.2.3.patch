diff --git a/node_modules/typescript/lib/tsc.js b/node_modules/typescript/lib/tsc.js
index e9a949e..fad7abe 100644
--- a/node_modules/typescript/lib/tsc.js
+++ b/node_modules/typescript/lib/tsc.js
@@ -69896,7 +69896,7 @@ var ts;
 })(ts || (ts = {}));
 var ts;
 (function (ts) {
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     function transformTypeScript(context) {
         var factory = context.factory, emitHelpers = context.getEmitHelperFactory, startLexicalEnvironment = context.startLexicalEnvironment, resumeLexicalEnvironment = context.resumeLexicalEnvironment, endLexicalEnvironment = context.endLexicalEnvironment, hoistVariableDeclaration = context.hoistVariableDeclaration;
         var resolver = context.getEmitResolver();
diff --git a/node_modules/typescript/lib/tsserver.js b/node_modules/typescript/lib/tsserver.js
index ab15b71..c1d8008 100644
--- a/node_modules/typescript/lib/tsserver.js
+++ b/node_modules/typescript/lib/tsserver.js
@@ -83211,7 +83211,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/tsserverlibrary.js b/node_modules/typescript/lib/tsserverlibrary.js
index d5b90a0..a7e10e6 100644
--- a/node_modules/typescript/lib/tsserverlibrary.js
+++ b/node_modules/typescript/lib/tsserverlibrary.js
@@ -83405,7 +83405,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/typescript.js b/node_modules/typescript/lib/typescript.js
index 84f8b51..2d50f20 100644
--- a/node_modules/typescript/lib/typescript.js
+++ b/node_modules/typescript/lib/typescript.js
@@ -83405,7 +83405,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/typescriptServices.js b/node_modules/typescript/lib/typescriptServices.js
index 0a68ba8..b68c595 100644
--- a/node_modules/typescript/lib/typescriptServices.js
+++ b/node_modules/typescript/lib/typescriptServices.js
@@ -83405,7 +83405,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
diff --git a/node_modules/typescript/lib/typingsInstaller.js b/node_modules/typescript/lib/typingsInstaller.js
index d0bfd8e..9057c3b 100644
--- a/node_modules/typescript/lib/typingsInstaller.js
+++ b/node_modules/typescript/lib/typingsInstaller.js
@@ -83200,7 +83200,7 @@ var ts;
     /**
      * Indicates whether to emit type metadata in the new format.
      */
-    var USE_NEW_TYPE_METADATA_FORMAT = false;
+    var USE_NEW_TYPE_METADATA_FORMAT = true;
     var TypeScriptSubstitutionFlags;
     (function (TypeScriptSubstitutionFlags) {
         /** Enables substitutions for decorated classes. */
