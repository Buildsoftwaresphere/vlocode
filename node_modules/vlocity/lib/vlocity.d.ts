/**
 * Simple TS declaration file for Vlocity NPM module
 */
import * as jsforce from 'jsforce';
export = vlocity;

declare class vlocity {
    constructor(options: vlocity.jobOptions);

    checkLogin(onSuccess: any, onError: any): void;

    getNamespace(onSuccess: any, onError: any): any;

    getPackageVersion(onSuccess: any, onError: any): void;

    login(onSuccess: any, onError: any, retryCount: Number): any;

    loginFailedMessage(error: any): any;

    sfdxLogin(onSuccess: any, onError: any): any;

    static runDataPacksCommand(action: vlocity.actionType, options: vlocity.jobOptions): any;

    readonly datapacksjob : vlocity.datapacksjob;

    readonly datapacksexpand : vlocity.DataPacksExpand;

    readonly tempFolder: string;

    readonly jsForceConnection: jsforce.Connection;

    readonly namespace: string;
}

declare namespace vlocity {

    export class datapacksjob {
        runJob(command : actionType, jobInfo: vlocity.jobOptions, resolve, reject) : Promise<any>
        /**
         * Data loaded from 'defaultjobsettings.yaml'
         */
        defaultJobSettings: any;
        /**
         * Data loaded from 'querydefinition.yaml'
         */
        queryDefinitions: { [datapackType: string] : { VlocityDataPackType: string, query: string } };
    }

    export class DataPacksExpand {
        generateFolderPath(dataPackType, parentName) : string;
        generateFolderOrFilename(filename, extension) : string;
        generateFilepath(dataPackType, parentName, filename, extension) : string;
        getNameWithFields(nameFields, dataPackData): string;
        getDataPackName (dataPackType, sObjectType, dataPackData) : string;        
        getListFileName(dataPackType, sObjectType, dataPackData) : string;         
        getDataPackFolder(dataPackType, sObjectType, dataPackData) : string;
    }

    export interface jobOptions {
        sfdxUsername?: string;
        username?: string;
        password?: string;
        vlocityNamespace?: string;
        loginUrl?: string;
        accessToken?: string;
        sessionId?: string;
        instanceUrl?: string;
        httpProxy?: string;
        verbose?: Boolean;
        performance?: Boolean;
        passedInOptionsOverride?: string;
        commandLineOptionsOverride?: string;
        projectPath? : string;
        maxDepth?: Number;
        // From JobInfo
        strict?:  Boolean;
        continueAfterError?: Boolean;
        supportHeadersOnly?: Boolean;
        supportForceDeploy?: Boolean;
        ignoreAllErrors?: Boolean;
    }

    type actionType = 
        'Export' | 
        'Import' | 
        'Deploy' | 
        'BuildFile' | 
        'ExpandFile' | 
        'GetDiffs' | 
        'GetDiffsAndDeploy' | 
        'GetAllAvailableExports' |
        'RefreshProject' |
        'BuildManifest' |
        'ValidateLocalData' |
        'CleanOrgData' |
        'UpdateSettings' |
        'RefreshVlocityBase' |
        'Apex' |
        'JavaScript';

}

